<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.foodpin.store.model.mapper.SearchStoreMapper">




<!-- 카테고리에 해당하는 가게들 리스트 -->
<select id="searchStoreList" parameterType="map" resultType="Store">
  SELECT DISTINCT STORE_NO, STORE_NAME, STORE_INFO, STORE_LOCATION, STORE_STATUS,
       STORE_TEL, OPEN_HOUR, CLOSE_HOUR, BREAKTIME_START, BREAKTIME_END, 
       STORE_CLOSED, STORE_IMG,
       
         (SELECT COUNT(*) 
       FROM "REVIEW"
       WHERE STORE_NO = #{storeNo}
      AND REVIEW_DEL_FL = 'N') REVIEW_COUNT,


       	(SELECT COUNT(*) 
		 FROM "BOOKMARK"
		 WHERE STORE_NO = #{storeNo}) LIKE_COUNT,
		 

	     (SELECT ROUND(AVG(REVIEW_RATING), 1)
		  FROM REVIEW
		  WHERE STORE_NO =#{storeNo}
		  AND REVIEW_DEL_FL = 'N') TOTAL_RATING
		 
		 <if test="memberNo!=null">
		 
		 , (SELECT COUNT(*)FROM "BOOKMARK"
	    WHERE MEMBER_NO = #{memberNo}
	    AND STORE_NO =#{storeNo}) BOOKMARK
	    </if>
		  
       
  FROM "STORE"
  JOIN "STORE_CATEGORY" USING (STORE_NO)
  JOIN "MEMBER" USING(MEMBER_NO)
  <where>
    <if test="categoryCode != 1">
      AND CATEGORY_CODE = #{categoryCode}
    </if>
    <if test="closedYn != null and closedYn != ''">
      AND STORE_CLOSED = #{closedYn}
    </if>
  </where>
</select>



<!-- 가게 상세 카테고리 조회 -->
<select id="searchStoreCategoryList" resultType="StoreCategory">
  SELECT CATEGORY_TITLE  FROM "CATEGORY"
  
  
  
	JOIN "STORE_CATEGORY" USING (CATEGORY_CODE)
	WHERE STORE_NO = #{storeNo} 
</select>

  <select id="searchStoreHashList" resultType="ReviewHash">
     
		SELECT DISTINCT H.HASH_TITLE
		FROM REVIEW R
		JOIN REVIEW_HASH RH ON R.REVIEW_NO = RH.REVIEW_NO
		JOIN HASH H ON RH.HASH_NO = H.HASH_NO
		WHERE R.STORE_NO =  #{storeNo} 
		AND REVIEW_DEL_FL ='N' 
   </select>
   
   
   
 
 
   <!-- 메인에서 검색한 가게 리스트 -->
	<select id="mainSearchStore">
	 SELECT DISTINCT STORE_NO, STORE_NAME, STORE_INFO, STORE_LOCATION, STORE_STATUS, STORE_TEL,
	 OPEN_HOUR, CLOSE_HOUR, BREAKTIME_START, BREAKTIME_END, STORE_CLOSED, STORE_IMG, 
	 
	
	   (SELECT COUNT(*) 
       FROM "REVIEW"
       WHERE STORE_NO = #{storeNo}
      AND REVIEW_DEL_FL = 'N') REVIEW_COUNT,


       	(SELECT COUNT(*) 
		 FROM "BOOKMARK"
		 WHERE STORE_NO = #{storeNo}) LIKE_COUNT,
		 

	     (SELECT ROUND(AVG(REVIEW_RATING), 1)
		  FROM REVIEW
		  WHERE STORE_NO =#{storeNo}
		  AND REVIEW_DEL_FL = 'N') TOTAL_RATING
		 
		 <if test="memberNo!=null">
		 
		 , (SELECT COUNT(*)FROM "BOOKMARK"
	    WHERE MEMBER_NO = #{memberNo}
	    AND STORE_NO =#{storeNo}) BOOKMARK
	    </if>
		  
	  
	FROM "STORE" 
	JOIN "STORE_CATEGORY" USING (STORE_NO) 
	JOIN "CATEGORY" USING (CATEGORY_CODE) 
	JOIN "MEMBER" USING(MEMBER_NO) 
	WHERE STORE_CLOSED='N'
    AND ( STORE_NAME LIKE '%'|| #{mainSearch}||'%' 
         OR 
          STORE_LOCATION LIKE '%'|| #{mainSearch}||'%' 
         OR CATEGORY_TITLE LIKE '%'|| #{mainSearch}||'%' 
         )
	</select>

  <!-- 카테고리 리스트 조회 -->
  <select id="selectSearchCategory" resultType="Category">
   SELECT CATEGORY_CODE, CATEGORY_TITLE 
    FROM "CATEGORY"
    ORDER BY CATEGORY_CODE
 </select>
 
   
<!--    
    가게 찜 해제
   <delete id="deleteSearchStoreLike">
     DELETE FROM "BOOKMARK"
     WHERE MEMBER_NO = #{memberNo}
     AND STORE_NO = #{storeNo}
   </delete>
   
   가게 찜 체크
    <insert id="insertSearchStoreLike">
     INSERT INTO "BOOKMARK" (MEMBER_NO, STORE_NO)
     VALUES(#{memberNo}, #{storeNo})
     
    </insert>
   
   가게 찜 개수
   <select id="selectSearchLikeCount">
    SELECT COUNT(*) FROM "BOOKMARK"
     WHERE STORE_NO = #{storeNo}
   </select> -->

</mapper>