<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.foodpin.myPage.model.mapper.MemberMyPageMapper">

	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		UPDATE "MEMBER" SET
		PROFILE_IMG = #{profileImg},
		MEMBER_NICKNAME = #{memberNickname},
		MEMBER_EMAIL = #{memberEmail},
		MEMBER_TEL = #{memberTel}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 비번 DB에 있는 것과 입력한것 일치하는지 -->
	<select id="selectPw">
		SELECT MEMBER_PW
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 예약 확정/대기 조회 -->
	<select id="checkReserv">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE MEMBER_NO = #{memberNo}
		AND ((RESERV_DATE > SYSDATE AND RESERV_STATUS_FL = 'Y')
	  	OR RESERV_STATUS_FL = 'N')
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE MEMBER SET
		MEMBER_STATUS = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 비밀번호 변경 -->
	<update id="memberChangePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 노쇼횟수 -->
	<select id="noshowCount">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'X'
	</select>
	
	<!-- 예약 확정 조회 -->
	<select id="reservationFix">
		SELECT (SELECT COUNT(*) FROM MEMBER M
				WHERE MEMBER_NO = #{memberNo} 
				AND RESERV_STATUS_FL = 'Y'
				AND TO_TIMESTAMP(TO_CHAR(R.RESERV_DATE, 'YYYY-MM-DD') || ' ' || R.RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE) FIX_COUNT,
			RESERV_NO, <![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		    
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'Y'
		AND TO_TIMESTAMP(TO_CHAR(R.RESERV_DATE, 'YYYY-MM-DD') || ' ' || R.RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE 
		ORDER BY RESERV_DATE, RESERV_TIME
	</select>
	
	<!-- 예약 대기 조회 -->
	<select id="reservationWait">
		SELECT (SELECT COUNT(*) FROM RESERVATION 
			WHERE RESERV_STATUS_FL = 'N'
			AND MEMBER_NO = #{memberNo}
			) WAIT_COUNT, 
			RESERV_NO, <![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'N'
		ORDER BY RESERV_DATE, RESERV_TIME
	</select>
	
	<!-- 지난 예약 조회 -->
	<select id="reservationLast">
		<![CDATA[ 
		SELECT (SELECT COUNT(*) FROM RESERVATION 
			    WHERE RESERV_STATUS_FL = 'Y'
			    AND MEMBER_NO = #{MEMBER_NO}
			    AND SYSDATE > RESERV_DATE
			    ) LAST_COUNT, 
			TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'Y'
		AND SYSDATE > TO_TIMESTAMP(TO_CHAR(R.RESERV_DATE, 'YYYY-MM-DD') || ' ' || R.RESERV_TIME, 'YYYY-MM-DD HH24:MI')
		ORDER BY RESERV_DATE, RESERV_TIME
		]]>
	</select>
	
	<!-- 예약 취소/노쇼 조회 -->
	<select id="reservationCancelNoshow">
		SELECT (SELECT COUNT(*) FROM RESERVATION 
				WHERE RESERV_STATUS_FL = 'X'
				OR RESERV_STATUS_FL = 'C') CANCEL_NOSHOW_COUNT,
			<![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND (RESERV_STATUS_FL = 'C' OR RESERV_STATUS_FL = 'X')
		ORDER BY RESERV_DATE, RESERV_TIME
	</select>
	
	<!-- 예약 취소 기능 -->
	<update id="cancelReservation">
		UPDATE RESERVATION SET RESERV_STATUS_FL = 'C'
		WHERE MEMBER_NO = #{memberNo}
		AND RESERV_NO = #{reservNo}
	</update>
	
	<!-- 북마크 목록 조회 -->
	<select id="memberLikeList">
		SELECT STORE_NAME, STORE_LOCATION
		FROM BOOKMARK B
		JOIN STORE S ON B.STORE_NO = S.STORE_NO
		WHERE B.MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 리뷰 조회 -->
	<select id="selectReviewList">
		SELECT STORE_NAME, REVIEW_RATING, 
			   <![CDATA[ TO_CHAR(REVIEW__REG_DATE, 'YYYY. MM. DD') REVIEW__REG_DATE]]>, 
			   REVIEW_CONTENT 
		FROM REVIEW R
		JOIN STORE S ON R.STORE_NO = S.STORE_NO
		WHERE REVIEW_DEL_FL = 'N'
		AND R.MEMBER_NO = #{memberNo}
		ORDER BY REVIEW__REG_DATE DESC
	</select>

</mapper>