<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.foodpin.myPage.model.mapper.MemberMyPageMapper">

	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		
		<collection 
			property="uploadList"
			select = "uploadImageList"
			column = "REVIEW_NO"
			javaType = "java.util.ArrayList"
			ofType = "UploadImage"
		/>
		
		<collection 
			property="hashList"
			select = "selectHashList"
			column = "REVIEW_NO"
			javaType = "java.util.ArrayList"
			ofType = "ReviewHash"
		/>
		
		<collection 
			property="replyList"
			select = "selectReplyList"
			column = "REVIEW_NO"
			javaType = "java.util.ArrayList"
			ofType = "ReviewReply"
		/>
		
		<collection 
			property="reviewMenuList"
			select = "reviewUpdateMenu"
			column = "REVIEW_NO"
			javaType = "java.util.ArrayList"
			ofType = "ReviewMenu"
		/>
		
	</resultMap>

	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		UPDATE "MEMBER" SET
		PROFILE_IMG = #{profileImg},
		MEMBER_NICKNAME = #{memberNickname},
		MEMBER_EMAIL = #{memberEmail},
		MEMBER_TEL = #{memberTel}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 비번 DB에 있는 것과 입력한것 일치하는지 -->
	<select id="selectPw">
		SELECT MEMBER_PW
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 예약 확정/대기 조회 -->
	<select id="checkReserv">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE MEMBER_NO = #{memberNo}
		AND ((RESERV_DATE > SYSDATE AND RESERV_STATUS_FL = 'Y')
	  	OR RESERV_STATUS_FL = 'N')
	</select>
	
	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE MEMBER SET
		MEMBER_STATUS = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 비밀번호 변경 -->
	<update id="memberChangePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 노쇼횟수 -->
	<select id="noshowCount">
		SELECT COUNT(*)
		FROM RESERVATION
		WHERE MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'X'
	</select>
	
	<!-- 예약 확정 조회 -->
	<select id="reservationFix">
		SELECT R.STORE_NO, 
		    	(SELECT COUNT(*) FROM RESERVATION R
				WHERE MEMBER_NO = #{memberNo} 
				AND RESERV_STATUS_FL = 'Y'
				AND TO_TIMESTAMP(TO_CHAR(R.RESERV_DATE, 'YYYY-MM-DD') || ' ' || R.RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE) FIX_COUNT,
			RESERV_NO, <![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		    
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'Y'
		AND TO_TIMESTAMP(TO_CHAR(R.RESERV_DATE, 'YYYY-MM-DD') || ' ' || R.RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE 
		ORDER BY RESERV_DATE, RESERV_TIME
	</select>
	
	<!-- 예약 대기 조회 -->
	<select id="reservationWait">
		SELECT R.STORE_NO,
			(SELECT COUNT(*) FROM RESERVATION 
			WHERE RESERV_STATUS_FL = 'N'
			AND MEMBER_NO = #{memberNo}
			AND TO_DATE(TO_CHAR(RESERV_DATE, 'YYYY-MM-DD') || ' ' || RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE
			) WAIT_COUNT, 
			RESERV_NO, <![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND RESERV_STATUS_FL = 'N'
		AND TO_DATE(TO_CHAR(RESERV_DATE, 'YYYY-MM-DD') || ' ' || RESERV_TIME, 'YYYY-MM-DD HH24:MI') > SYSDATE
		ORDER BY RESERV_DATE, RESERV_TIME
	</select>
	
	<!-- 지난 예약 조회 -->
	<select id="reservationLast">
		<![CDATA[ 
		SELECT R.STORE_NO,
			(SELECT COUNT(*) FROM RESERVATION 
			 WHERE RESERV_STATUS_FL = 'Y'
			 AND MEMBER_NO = #{memberNo}
			 AND SYSDATE > TO_DATE(TO_CHAR(RESERV_DATE, 'YYYY-MM-DD') || ' ' || RESERV_TIME, 'YYYY-MM-DD HH24:MI')
			 ) LAST_COUNT, 
			TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION , R.RESERV_NO
		FROM RESERVATION R
		JOIN STORE S ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND S.STORE_CLOSED = 'N'
		AND RESERV_STATUS_FL = 'Y'
		AND SYSDATE > TO_DATE(TO_CHAR(RESERV_DATE, 'YYYY-MM-DD') || ' ' || RESERV_TIME, 'YYYY-MM-DD HH24:MI')
		ORDER BY RESERV_DATE DESC, RESERV_TIME
		]]>
	</select>
	
	<!-- 예약마다 리뷰 개수 -->
	<select id="reservReviewCount">
		SELECT COUNT(*)
		FROM REVIEW 
		WHERE RESERV_NO = #{reservNo}
		AND MEMBER_NO = #{memberNo}
		AND REVIEW_DEL_FL = 'N'
	</select>
	
	<!-- 예약 취소/노쇼 조회 -->
	<select id="reservationCancelNoshow">
		SELECT R.STORE_NO,
			(SELECT COUNT(*) FROM RESERVATION 
			 WHERE MEMBER_NO = #{memberNo}
			 AND (RESERV_STATUS_FL = 'X'
			 OR RESERV_STATUS_FL = 'C')) CANCEL_NOSHOW_COUNT,
			<![CDATA[ TO_CHAR(RESERV_DATE, 'YYYY. MM. DD') RESERV_DATE]]>,
			R.RESERV_TIME, 
		    S.STORE_NAME, R.RESERV_COUNT, S.STORE_LOCATION, RESERV_STATUS_FL
		FROM RESERVATION R
		JOIN STORE S 
		ON R.STORE_NO = S.STORE_NO
		WHERE R.MEMBER_NO = #{memberNo}
		AND (RESERV_STATUS_FL = 'C' OR RESERV_STATUS_FL = 'X')
		ORDER BY RESERV_DATE DESC, RESERV_TIME 
	</select>
	
	<!-- 예약 취소 기능 -->
	<update id="cancelReservation">
		UPDATE RESERVATION SET RESERV_STATUS_FL = 'C'
		WHERE MEMBER_NO = #{memberNo}
		AND RESERV_NO = #{reservNo}
	</update>
	
	<!-- 찜 목록 조회 -->
	<select id="memberLikeList">
		SELECT B.STORE_NO, STORE_NAME, STORE_LOCATION
		FROM BOOKMARK B
		JOIN STORE S ON B.STORE_NO = S.STORE_NO
		WHERE B.MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 찜 개수 -->
	<select id="likeCount">
		SELECT COUNT(*)
		FROM BOOKMARK
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 찜 취소 -->
	<delete id="cancelLike" parameterType = "map">
		DELETE FROM BOOKMARK
		WHERE MEMBER_NO = #{memberNo}
		AND STORE_NO = #{storeNo}
	</delete>
	
	<!-- 리뷰 조회 -->
	<select id="selectReviewList" resultMap = "review_rm">
		SELECT DISTINCT STORE_NO, STORE_NAME, REVIEW_RATING, REVIEW_NO,
			   TO_CHAR(REVIEW__REG_DATE, 'YYYY-MM-DD') REVIEW__REG_DATE, 
			   REVIEW__REG_DATE A, REVIEW_CONTENT,
			   R.MEMBER_NO, REVIEW_DEL_FL 
		FROM REVIEW R
		JOIN STORE USING(STORE_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND R.MEMBER_NO = #{memberNo}
		ORDER BY A DESC
	</select>
	
	<!-- 리뷰개수 -->
	<select id="reviewCount">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE MEMBER_NO = #{memberNo}
		AND REVIEW_DEL_FL = 'N'
	</select>

	
	<!-- 리뷰 이미지 조회 -->
	<select id="uploadImageList" resultType="UploadImage">
		SELECT * 
		FROM UPLOAD_IMAGE
		WHERE REVIEW_NO = #{reviewNo}
		ORDER BY IMAGE_ORDER
	</select>
	
	<!-- 리뷰 해시태그 조회 -->
	<select id="selectHashList" resultType="ReviewHash">
		SELECT HASH_NO, REVIEW_NO, HASH_TITLE 
		FROM REVIEW_HASH
		JOIN HASH USING (HASH_NO)
		WHERE REVIEW_NO = #{reviewNo}
	</select>

	<!-- 리뷰 사장님 댓글 조회 -->
	<select id="selectReplyList" resultType="ReviewReply">
		SELECT R.REPLY_NO , R.STORE_NO, R.REPLY_CONENT, R.REPLY_REG_DATE ,R.REPLY_DEL_FL , 
			R.REVIEW_NO,  S.STORE_IMG
		FROM REVIEW_REPLY R
		JOIN STORE S ON (R.STORE_NO = S.STORE_NO)
		WHERE REVIEW_NO = #{reviewNo}
		AND REPLY_DEL_FL = 'N'
	</select>
	
	<select id="reviewUpdateMenu" resultType="ReviewMenu">
		SELECT * FROM REVIEW_MENU
		JOIN MENU USING (MENU_NO)
		WHERE REVIEW_NO = #{reviewNo}
	</select>
	


</mapper>