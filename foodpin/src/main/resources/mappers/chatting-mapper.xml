<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.foodpin.chatting.model.mapper.ChattingMapper">

   <!-- 채팅방 목록 조회 -->
	<select id="selectRoomList" resultType="ChattingRoom">
		SELECT CHATTING_NO
			,(SELECT MESSAGE_CONTENT FROM (
				SELECT * FROM MESSAGE M2
				WHERE M2.CHATTING_NO = R.CHATTING_NO
				ORDER BY MESSAGE_NO DESC) 
				WHERE ROWNUM = #{memberNo}) LAST_MESSAGE
			,TO_CHAR(NVL((SELECT MAX(SEND_TIME) SEND_TIME 
					FROM MESSAGE M
					WHERE R.CHATTING_NO  = M.CHATTING_NO), CREATE_DATE), 
					'YYYY.MM.DD') SEND_TIME
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				R.PARTICIPANT,
				R.OPEN_MEMBER
				) TARGET_NO	
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_NICKNAME	
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				(SELECT STORE_NAME FROM STORE WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT STORE_NAME FROM STORE WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_STORE_NAME
				
				
				
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = #{memberNo}),
				
				(SELECT CASE 
					WHEN (SELECT MEMBER_CODE FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT) = 2
					THEN 
						TO_CHAR((SELECT STORE_IMG FROM STORE WHERE MEMBER_NO = R.PARTICIPANT))
					ELSE 
						TO_CHAR((SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT))	
				END TARGET_PROFILE
				FROM DUAL)
				,
				(SELECT CASE 
					WHEN (SELECT MEMBER_CODE FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER) = 2
					THEN 
						TO_CHAR((SELECT STORE_IMG FROM STORE WHERE MEMBER_NO = R.OPEN_MEMBER))
					ELSE 
						TO_CHAR((SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER))	
				END TARGET_PROFILE
				FROM DUAL)
				) TARGET_PROFILE
				
				
			,(SELECT COUNT(*) FROM MESSAGE M WHERE M.CHATTING_NO = R.CHATTING_NO AND READ_FL = 'N' AND MEMBER_NO != 1) NOT_READ_COUNT
			,(SELECT MAX(MESSAGE_NO) SEND_TIME FROM MESSAGE M WHERE R.CHATTING_NO  = M.CHATTING_NO) MAX_MESSAGE_NO
		FROM CHATTING_ROOM R
		WHERE OPEN_MEMBER = #{memberNo}
		OR PARTICIPANT = #{memberNo}
		ORDER BY MAX_MESSAGE_NO DESC NULLS LAST
	</select>

	<!-- 관리자 채팅 확인 -->
	<select id="checkAskChattingNo" resultType="_int">
		SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
		WHERE (OPEN_MEMBER = #{loginMemberNo} AND PARTICIPANT = 3)
		OR (OPEN_MEMBER = 3 AND PARTICIPANT = #{loginMemberNo})
	</select>
	
	<!-- 관리자 채팅방 생성 -->
	<insert id="createAskChattingRoom" parameterType="map" useGeneratedKeys="true">
	
		<selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
			SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO CHATTING_ROOM
		VALUES(#{chattingNo}, DEFAULT, #{loginMemberNo}, 3)
	</insert>
	
	<!-- 채팅 확인 -->
	<select id="checkChattingNo" resultType="_int">
		SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
		
		WHERE (OPEN_MEMBER = #{loginMemberNo} AND PARTICIPANT =  #{targetNo})
		OR (OPEN_MEMBER = #{targetNo} AND PARTICIPANT = #{loginMemberNo})
		
	</select>
	
	
	<!-- 채팅방 생성 -->
	<insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">
	
		<selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
			SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO CHATTING_ROOM
		VALUES(#{chattingNo}, DEFAULT, #{loginMemberNo}, #{targetNo})
	</insert>
	


	<!-- 채팅 메세지 삽입 -->
	<insert id="insertMessage" useGeneratedKeys="true">
		INSERT INTO "MESSAGE"
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, 
		 #{memberNo}
		, #{chattingNo},#{targetNo})
	</insert>

	<!-- 안내 채팅 메세지 삽입 -->
	<insert id="insertInfoMessage" useGeneratedKeys="true">
		INSERT INTO "MESSAGE"
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, '안녕하세요. FOODPIN입니다. 문의를 남겨주시면 빠른 시간내에 답변드리겠습니다. 감사합니다.', DEFAULT, DEFAULT, 
		 #{targetNo}
		, #{chattingNo},#{loginMemberNo})
	</insert>
	
	
	<!-- 채팅 메세지 중 내가 보내지 않은 글을 읽음으로 표시 -->
	<update id="updateReadFlag">
		UPDATE "MESSAGE" SET
		READ_FL = 'Y'
		WHERE CHATTING_NO = #{chattingNo}
		AND MEMBER_NO != #{memberNo}
	</update>

	<!-- 채팅방 메세지 조회 -->
	<select id="selectMessageList" resultType="Message">
		WITH SUB_STORE AS
			(SELECT CHATTING_NO, STORE_IMG FROM(
			SELECT *
			FROM CHATTING_ROOM
			WHERE CHATTING_NO = #{chattingNo}) C
			JOIN STORE S ON S.MEMBER_NO IN(OPEN_MEMBER, PARTICIPANT))
			
		
	
		SELECT MESSAGE_NO, MESSAGE_CONTENT, READ_FL, MEMBER_NO, M.CHATTING_NO, STORE_NAME, SUB.STORE_IMG,
		TO_CHAR(SEND_TIME, 'HH24:MI') SEND_TIME,
		(SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO=3) PROFILE_IMG, 
		(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO=3) MEMBER_NICKNAME
		FROM "MESSAGE" M
		LEFT JOIN "STORE" USING(MEMBER_NO)
		LEFT JOIN SUB_STORE SUB ON SUB.CHATTING_NO = M.CHATTING_NO 
		WHERE M.CHATTING_NO  = #{chattingNo}
		ORDER BY MESSAGE_NO
	</select>


	<!-- 채팅 상대 검색 -->
	<select id="selectTarget">
	SELECT * FROM(
		SELECT CHATTING_NO
			,(SELECT MESSAGE_CONTENT FROM (
				SELECT * FROM MESSAGE M2
				WHERE M2.CHATTING_NO = R.CHATTING_NO
				ORDER BY MESSAGE_NO DESC) 
				WHERE ROWNUM = ${memberNo}) LAST_MESSAGE
			,TO_CHAR(NVL((SELECT MAX(SEND_TIME) SEND_TIME 
					FROM MESSAGE M
					WHERE R.CHATTING_NO  = M.CHATTING_NO), CREATE_DATE), 
					'YYYY.MM.DD') SEND_TIME
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = ${memberNo}),
				R.PARTICIPANT,
				R.OPEN_MEMBER
				) TARGET_NO	
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = ${memberNo}),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_NICKNAME	
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = ${memberNo}),
				(SELECT STORE_NAME FROM STORE WHERE MEMBER_NO = R.PARTICIPANT),
				(SELECT STORE_NAME FROM STORE WHERE MEMBER_NO = R.OPEN_MEMBER)
				) TARGET_STORE_NAME
				
				
				
			,NVL2((SELECT OPEN_MEMBER FROM CHATTING_ROOM R2
				WHERE R2.CHATTING_NO = R.CHATTING_NO
				AND R2.OPEN_MEMBER = ${memberNo}),
				
				(SELECT CASE 
					WHEN (SELECT MEMBER_CODE FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT) = 2
					THEN 
						TO_CHAR((SELECT STORE_IMG FROM STORE WHERE MEMBER_NO = R.PARTICIPANT))
					ELSE 
						TO_CHAR((SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.PARTICIPANT))	
				END TARGET_PROFILE
				FROM DUAL)
				,
				(SELECT CASE 
					WHEN (SELECT MEMBER_CODE FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER) = 2
					THEN 
						TO_CHAR((SELECT STORE_IMG FROM STORE WHERE MEMBER_NO = R.OPEN_MEMBER))
					ELSE 
						TO_CHAR((SELECT PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.OPEN_MEMBER))	
				END TARGET_PROFILE
				FROM DUAL)
				) TARGET_PROFILE
				
				
			,(SELECT COUNT(*) FROM MESSAGE M WHERE M.CHATTING_NO = R.CHATTING_NO AND READ_FL = 'N' AND MEMBER_NO != 1) NOT_READ_COUNT
			,(SELECT MAX(MESSAGE_NO) SEND_TIME FROM MESSAGE M WHERE R.CHATTING_NO  = M.CHATTING_NO) MAX_MESSAGE_NO
		FROM CHATTING_ROOM R
		JOIN MEMBER M ON(R.OPEN_MEMBER=M.MEMBER_NO OR R.PARTICIPANT=M.MEMBER_NO)
		WHERE (OPEN_MEMBER = ${memberNo} OR PARTICIPANT = ${memberNo})
		ORDER BY MAX_MESSAGE_NO DESC NULLS LAST
		)
		WHERE TARGET_NICKNAME LIKE '%${query}%'
	</select>
  
  
  	<!-- 관리자 이미지 -->
  	<select id="selectProfileImg">
  		SELECT PROFILE_IMG
  		FROM MEMBER
  		WHERE MEMBER_NO = 3
  	</select>
  	<!-- 관리자 닉네임 -->
  	<select id="selectMemberNickname">
  		SELECT MEMBER_NICKNAME
  		FROM MEMBER
  		WHERE MEMBER_NO = 3
  	</select>
  	
  	<select id="notReadChattingCount">
  	SELECT COUNT(*)
	FROM MESSAGE
	WHERE TARGET_NO = #{memberNo}
  	AND READ_FL = 'N'
  	</select>
  	
  	
  
</mapper>