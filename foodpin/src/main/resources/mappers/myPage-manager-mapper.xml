<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.foodpin.myPage.model.mapper.ManagerMyPageMapper">

	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO"/>
		
		<collection 
			property="uploadList"
			select = "uploadImageList"
			column = "REVIEW_NO"
			javaType = "java.util.ArrayList"
			ofType = "UploadImage"
		/>
		
	</resultMap>

	<!-- 가게 입점 내역 목록 -->
	<select id="storeRequestList">
		SELECT M.MEMBER_NO, MEMBER_NAME, STORE_NAME, STORE_INFO,
		<![CDATA[ TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') ENROLL_DATE]]>,
		MEMBER_TEL, STORE_LOCATION, STORE_TEL, STORE_NO
		FROM "MEMBER" M
		JOIN "STORE" S ON M.MEMBER_NO = S.MEMBER_NO
		WHERE MEMBER_CODE = #{memberCode}
		AND MEMBER_STATUS = #{memberStatus}
		
		AND STORE_CLOSED = 'N'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<!-- 승인버튼 -->
	<update id="approveMember">
		UPDATE MEMBER SET
		MEMBER_STATUS = 'N'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 거절버튼 -->
	<update id="refuseMember">
		UPDATE MEMBER SET
		MEMBER_STATUS = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 폐점버튼 -->
	<update id="closeStore">
		UPDATE STORE SET 
		STORE_CLOSED = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 리뷰 신고 내역 조회 -->
	<select id="reportList" resultMap="review_rm">
		SELECT STORE_NO, STORE_NAME, TO_CHAR(REPORT_DATE, 'YYYY-MM-DD') REPORT_DATE, REPORT_DATE A,
			REVIEW_CONTENT, REPORT_CONTENT, MEMBER_NAME, STORE_TEL, REPORT_NO, REVIEW_NO
		FROM REPORT
		JOIN MEMBER USING(MEMBER_NO)
		JOIN REVIEW USING(REVIEW_NO)
		JOIN STORE USING(STORE_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND REPORT_DEL_FL = 'N'
		ORDER BY A DESC
	</select>
	
	<!-- 신고 리뷰 이미지 조회 -->
	<select id="uploadImageList" resultType="UploadImage">
		SELECT * 
		FROM UPLOAD_IMAGE
		WHERE REVIEW_NO = #{reviewNo}
		ORDER BY IMAGE_ORDER
	</select>
	
	<!-- 리뷰 신고 개수 -->
	<select id="reportCount">
		SELECT COUNT(*)
		FROM REPORT
		JOIN REVIEW USING(REVIEW_NO)
		WHERE REVIEW_DEL_FL = 'N'
		AND REPORT_DEL_FL = 'N'
	</select>
	
	<!-- 처리한 리뷰 신고 조회 -->
	<select id="completeReportList" resultMap="review_rm">
		SELECT STORE_NAME, TO_CHAR(REPORT_DATE, 'YYYY-MM-DD') REPORT_DATE, REPORT_DATE A,
			REVIEW_CONTENT, REPORT_CONTENT, MEMBER_NAME, STORE_TEL
		FROM REPORT
		JOIN MEMBER USING(MEMBER_NO)
		JOIN REVIEW USING(REVIEW_NO)
		JOIN STORE USING(STORE_NO)
		WHERE REPORT_DEL_FL = 'Y'
		AND REVIEW_DEL_FL = 'Y'
		ORDER BY A DESC
	</select>
	
	<!-- 처리한 리뷰 신고 개수 -->
	<select id="completeReportCount">
		SELECT COUNT(*)
		FROM REPORT
		JOIN REVIEW USING(REVIEW_NO)
		WHERE REVIEW_DEL_FL = 'Y'
		AND REPORT_DEL_FL = 'Y'
	</select>
	
	<!-- REPORT_DEL_FL = 'Y' -->
	<update id="updateReport">
		UPDATE REPORT SET 
		REPORT_DEL_FL = 'Y'
		WHERE REPORT_NO = #{reportNo}
	</update>
	
	<!-- REVIEW_DEL_FL = 'Y' -->
	<update id="updateReview">
		UPDATE REVIEW SET 
		REVIEW_DEL_FL = 'Y'
		WHERE REVIEW_NO IN(SELECT REVIEW_NO FROM REPORT WHERE REPORT_NO = #{reportNo})
	</update>

	<!-- 가게 정보 신고 조회 -->
	<select id="infoRequestList">
		SELECT REQUEST_CATEGORY_TITLE, 
			TO_CHAR(REQUEST_DATE, 'YYYY-MM-DD') REQUEST_DATE, REQUEST_DATE A,
			REQUEST_CONTENT, MEMBER_NAME, STORE_NAME, REQUEST_NO, STORE_TEL
		FROM REQUEST_EDIT
		JOIN REQUEST_CATEGORY USING(REQUEST_CATEGORY_CODE)
		JOIN MEMBER USING(MEMBER_NO)
		JOIN STORE USING(STORE_NO)
		WHERE REQUEST_DEL_FL = 'N'
		ORDER BY A DESC
	</select>
	
	<!-- 가게 정보 정정 완료 -->
	<update id="completeRequest">
		UPDATE REQUEST_EDIT SET
		REQUEST_DEL_FL = 'Y'
		WHERE REQUEST_NO = #{requestNo}
	</update>

</mapper>